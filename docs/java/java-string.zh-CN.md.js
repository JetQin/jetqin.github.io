webpackJsonp([11],{1275:function(n,s){n.exports={content:["article",["p","String\u53ef\u80fd\u662fjava\u8bed\u8a00\u4e2d\u7528\u5230\u7684\u6700\u591a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u5206\u6790string\u662f\u5982\u4f55\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684"],["h2","String interning"],["p","\u7531\u4e8eJava string\u7684\u4e0d\u53d8\u6027\uff0cJVM\u53ea\u5b58\u50a8\u5b57\u7b26\u5e38\u91cf\u7684\u4e00\u4efd\u62f7\u8d1d\u5728\u5185\u5b58\u6c60\u4e2d\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4f5cinterning\n\u5f53\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7ed9\u5b83\u8d4b\u503c\u7684\u65f6\u5019\uff0cJVM\u4f1a\u641c\u7d22\u5b57\u7b26\u5e38\u91cf\u6c60\uff0c\u770b\u662f\u5426\u6709\u5339\u914d\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6709\uff0c\u76f4\u63a5\u8fd4\u56de\n\u8be5\u81ea\u5b57\u7b26\u4e32\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u4e0d\u518d\u91cd\u65b0\u7533\u8bf7\u5185\u5b58\uff0c\u5982\u679c\u6ca1\u6709\u53d1\u73b0\uff0c\u5219\u4f1a\u5c06\u8be5\u5b57\u7b26\u4e32\u6dfb\u52a0\u5230\u5b57\u7b26\u5e38\u91cf\u6c60\u4e2d\u8fd4\u56de\u8be5\u5b57\u7b26\u4e32\u5730\u5740."],["p","\u5982\u4e0b\u4ee3\u7801\u4e2d\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u4f1a\u53d1\u73b0\u5b83\u4eec\u662f\u76f8\u7b49\u7684"],["pre",{lang:null,highlighted:'String constantString1 <span class="token operator">=</span> <span class="token string">"Test"</span><span class="token comment" spellcheck="true">;</span>\nString constantString2 <span class="token operator">=</span> <span class="token string">"Test"</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token function">assertThat</span><span class="token punctuation">(</span>constantString1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSameAs</span><span class="token punctuation">(</span>constantString2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'String constantString1 = "Test";\nString constantString2 = "Test";\n\nassertThat(constantString1).isSameAs(constantString2);']],["h2","String \u6784\u9020\u51fd\u6570"],["p","\u5f53\u4f60\u4f7f\u7528new \u53bb\u521b\u5efa\u4e00\u4e2aString \u5bf9\u8c61\u7684\u65f6\u5019\uff0cjvm\u4f1a\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u5b58\u50a8\u5728jvm\u5806\u5185\u5b58. \u8fd9\u65f6\u505a\u6bd4\u8f83\u4e24\u8005\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7684"],["pre",{lang:null,highlighted:'String constantString <span class="token operator">=</span> <span class="token string">"Test"</span><span class="token comment" spellcheck="true">;         //\u5b58\u5728\u5e38\u91cf\u6c60\u4e2d</span>\nString newString <span class="token operator">=</span> new <span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;  //\u5b58\u5728\u5806\u4e2d</span>\n<span class="token function">assertThat</span><span class="token punctuation">(</span>constantString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNotSameAs</span><span class="token punctuation">(</span>newString<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'String constantString = "Test";         //\u5b58\u5728\u5e38\u91cf\u6c60\u4e2d\nString newString = new String("Test");  //\u5b58\u5728\u5806\u4e2d\nassertThat(constantString).isNotSameAs(newString);']],["h2","String Literal vs String\u5bf9\u8c61"],["p","\u5f53\u6211\u4eec\u4f7f\u7528",["code","new"],"\u5173\u952e\u8bcd\u521b\u5efa",["code","String"],"\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u865a\u62df\u673a\u603b\u662f\u4f1a\u5728\u5806\u5185\u5b58\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u4f7f\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u6709\uff0c\u5219\u8fd4\u56de\u8be5\u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u5b83\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a",["code","String"],"\u5bf9\u8c61\u5b58\u653e\u5728\u5e38\u91cf\u6c60\u4e2d\u4f9b\u5c06\u6765\u4f7f\u7528\u3002"],["pre",{lang:null,highlighted:'    String first <span class="token operator">=</span> <span class="token string">"Test"</span><span class="token comment" spellcheck="true">;</span>\n    String second <span class="token operator">=</span> <span class="token string">"Test"</span><span class="token comment" spellcheck="true">;</span>\n    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>first <span class="token operator">==</span> second<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; // True</span>\n\n    String third <span class="token operator">=</span> new <span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    String fourth <span class="token operator">=</span> new <span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>third <span class="token operator">==</span> fourth<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; // False</span>\n\n    String fifth <span class="token operator">=</span> <span class="token string">"Test"</span><span class="token comment" spellcheck="true">;</span>\n    String sixth <span class="token operator">=</span> new <span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fifth <span class="token operator">==</span> sixth<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; // False</span>'},["code",'    String first = "Test";\n    String second = "Test";\n    System.out.println(first == second); // True\n\n    String third = new String("Test");\n    String fourth = new String("Test");\n    System.out.println(third == fourth); // False\n\n    String fifth = "Test";\n    String sixth = new String("Test");\n    System.out.println(fifth == sixth); // False']],["h2","\u624b\u52a8Interning"],["p","\u901a\u8fc7String\u7684",["code","intern()"],"\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u521b\u5efa\u4e00\u4e2aintern String\uff0c \u5b83\u5c06String\u5bf9\u8c61\u7684\u5f15\u7528\u5b58\u5728\u5e38\u91cf\u6c60\u4e2d\uff0c\u5728\u9700\u8981\u7528\u5230\u7684\u65f6\u5019\u8fd4\u56de\u3002"],["pre",{lang:null,highlighted:'    String constantString <span class="token operator">=</span> <span class="token string">"interned Test"</span><span class="token comment" spellcheck="true">;</span>\n    String newString <span class="token operator">=</span> new <span class="token function">String</span><span class="token punctuation">(</span><span class="token string">"interned Test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token function">assertThat</span><span class="token punctuation">(</span>constantString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNotSameAs</span><span class="token punctuation">(</span>newString<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;    //\u4e0d\u7b49</span>\n\n    String internedString <span class="token operator">=</span> newString<span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token function">assertThat</span><span class="token punctuation">(</span>constantString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSameAs</span><span class="token punctuation">(</span>internedString<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; //\u76f8\u7b49</span>'},["code",'    String constantString = "interned Test";\n    String newString = new String("interned Test");\n\n    assertThat(constantString).isNotSameAs(newString);    //\u4e0d\u7b49\n\n    String internedString = newString.intern();\n    assertThat(constantString).isSameAs(internedString); //\u76f8\u7b49']],["p","\u5728Java7\u4e4b\u524d\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u5b58\u5728JVM\u7684PermGen space\u6709\u56fa\u5b9a\u7684\u5927\u5c0f\uff0c\u8fd0\u884c\u671f\u95f4\u4e0d\u80fd\u88ab\u52a8\u6001\u6269\u5c55\uff0c\u4e0d\u80fd\u88ab\u5783\u573e\u56de\u6536\uff0c\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7",["code","-XX:MaxPermSize=1G"],"\u6765\u8bbe\u7f6e\u5176\u5927\u5c0f\u3002\nJava7\u4e4b\u540e\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u5b58\u5728\u5806\u7a7a\u95f4\uff0c\u5141\u8bb8\u56de\u6536\u5668\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002"]],meta:{order:3,title:"Java \u5b57\u7b26\u4e32\u5e38\u91cf\u6c60",type:"\u5165\u95e8",filename:"docs/java/java-string.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#String-interning",title:"String interning"},"String interning"]],["li",["a",{className:"bisheng-toc-h2",href:"#String-\u6784\u9020\u51fd\u6570",title:"String \u6784\u9020\u51fd\u6570"},"String \u6784\u9020\u51fd\u6570"]],["li",["a",{className:"bisheng-toc-h2",href:"#String-Literal-vs-String\u5bf9\u8c61",title:"String Literal vs String\u5bf9\u8c61"},"String Literal vs String\u5bf9\u8c61"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u624b\u52a8Interning",title:"\u624b\u52a8Interning"},"\u624b\u52a8Interning"]]]}}});