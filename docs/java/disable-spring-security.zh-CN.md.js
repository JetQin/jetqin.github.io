webpackJsonp([17],{1268:function(n,s){n.exports={content:["article",["h2","\u4e3a\u4ec0\u4e48\u7981\u7528spring security"],["p","\u5728Spring boot\u9879\u76ee\u4e2d\u7ecf\u5e38\u4f1a\u52a0\u8f7d\u5230\u9ed8\u8ba4\u7684spring security\uff0c\u6b64\u65f6\u8bbf\u95ee\u4efb\u4f55Rest api\u90fd\u9700\u8981\u9a8c\u8bc1\u7528\u6237\uff0c\u6bd4\u8f83\u70e6\u4eba, \u6b64\u65f6\u4e3a\u4e86\u6d4b\u8bd5\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u7981\u7528\u9ed8\u8ba4\u7684spring security\u3002"],["p","\u5728",["code","Spring boot 2.0"],"\u4e4b\u524d\u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u914d\u7f6e\u53ef\u4ee5\u5173\u95edsecurity, \u5982\u4e0b"],["pre",{lang:null,highlighted:'security<span class="token punctuation">.</span>basic<span class="token punctuation">.</span>enabled<span class="token operator">=</span><span class="token boolean">false</span>'},["code","security.basic.enabled=false"]],["p","\u4f46\u662f\u5728",["code","spring boot 2.0"],"\u4e4b\u540e\u8fd9\u4e9b\u914d\u7f6e\u5df2\u5931\u6548\uff0c\u4e0d\u80fd\u5728\u4f7f\u7528\u4e0a\u9762\u7684\u914d\u7f6e\u6765\u7981\u7528",["code","spring security"],", \u53ef\u53c2\u8003",["a",{title:null,href:"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#security"},"Spring boot 2 Migration"]],["pre",{lang:null,highlighted:'security<span class="token punctuation">.</span>basic<span class="token punctuation">.</span>authorize<span class="token operator">-</span>mode\nsecurity<span class="token punctuation">.</span>basic<span class="token punctuation">.</span>enabled\nsecurity<span class="token punctuation">.</span>basic<span class="token punctuation">.</span>path\nsecurity<span class="token punctuation">.</span>basic<span class="token punctuation">.</span>realm\nsecurity<span class="token punctuation">.</span>enable<span class="token operator">-</span>csrf\nsecurity<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>cache\nsecurity<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>content<span class="token operator">-</span>security<span class="token operator">-</span>policy\nsecurity<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>content<span class="token operator">-</span>security<span class="token operator">-</span>policy<span class="token operator">-</span>mode\nsecurity<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>content<span class="token operator">-</span>type\nsecurity<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>frame\nsecurity<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>hsts\nsecurity<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>xss\nsecurity<span class="token punctuation">.</span>ignored\nsecurity<span class="token punctuation">.</span>require<span class="token operator">-</span>ssl\nsecurity<span class="token punctuation">.</span>sessions'},["code","security.basic.authorize-mode\nsecurity.basic.enabled\nsecurity.basic.path\nsecurity.basic.realm\nsecurity.enable-csrf\nsecurity.headers.cache\nsecurity.headers.content-security-policy\nsecurity.headers.content-security-policy-mode\nsecurity.headers.content-type\nsecurity.headers.frame\nsecurity.headers.hsts\nsecurity.headers.xss\nsecurity.ignored\nsecurity.require-ssl\nsecurity.sessions"]],["h2","\u5982\u4f55\u7981\u7528"],["ul",["li",["p","\u65b9\u6cd5\u4e00"]]],["p","\u901a\u8fc7\u8986\u76d6\u9ed8\u8ba4\u7684configure\u65b9\u6cd5\u6765\u5b9e\u73b0"],["pre",{lang:null,highlighted:'import lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>builders<span class="token punctuation">.</span>HttpSecurity<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>WebSecurityConfigurerAdapter<span class="token comment" spellcheck="true">;</span>\n\n\n<span class="token variable">@Slf4j</span>\n<span class="token variable">@Configuration</span>\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    <span class="token operator">/</span><span class="token operator">/</span> <span class="token variable">@formatter</span><span class="token punctuation">:</span>off\n    protected void <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> throws Exception {\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{} using Custome configure(HttpSecurity)."</span><span class="token punctuation">,</span><span class="token string">"Upscale"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">httpBasic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">/</span> <span class="token variable">@formatter</span><span class="token punctuation">:</span>on\n\n\n}'},["code",'import lombok.extern.slf4j.Slf4j;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n\n@Slf4j\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    // @formatter:off\n    protected void configure(HttpSecurity http) throws Exception {\n        log.info("{} using Custome configure(HttpSecurity).","Upscale");\n        http.csrf().disable()\n                .httpBasic().disable()\n                .authorizeRequests()\n                .antMatchers("/").permitAll();\n    }\n    // @formatter:on\n\n\n}']],["ul",["li",["p","\u65b9\u6cd5\u4e8c"]]],["p","\u901a\u8fc7\u5728\u914d\u7f6e",["code","Configuration"],"\u7684\u65f6\u5019\uff0c\u4e0d\u52a0\u8f7d",["code","spring security"],"\u7684\u76f8\u5173\u4f9d\u8d56\u4e5f\u53ef\u4ee5\u5b9e\u73b0"],["pre",{lang:null,highlighted:'import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>SecurityAutoConfiguration<span class="token comment" spellcheck="true">;</span>\n\n@<span class="token function">SpringBootApplication</span><span class="token punctuation">(</span>exclude<span class="token operator">=</span>{SecurityAutoConfiguration<span class="token punctuation">.</span>class}<span class="token punctuation">)</span>\npublic class Main {\n\n\tpublic <span class="token keyword">static</span> void <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> {\n\t\tSpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>Main<span class="token punctuation">.</span>class<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\t}\n}'},["code","import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration;\n\n@SpringBootApplication(exclude={SecurityAutoConfiguration.class})\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Main.class, args);\n\t}\n}"]],["ul",["li",["p","\u65b9\u6cd5\u4e09"]]],["p","\u5728application.yml\u6216\u8005",["code","application.properties"],"\u4e2d\u6dfb\u52a0\u6392\u9664\u9009\u9879\uff0c\u4e0d\u52a0\u8f7dSecurity\u76f8\u5173\u914d\u7f6e\uff0c\u7c7b\u4f3c\u4e8e\u65b9\u6cd5\u4e8c"],["pre",{lang:null,highlighted:'spring<span class="token punctuation">:</span>\n  autoconfigure<span class="token punctuation">:</span>\n    exclude<span class="token punctuation">:</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>SecurityAutoConfiguration'},["code","spring:\n  autoconfigure:\n    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration"]]],meta:{order:9,title:"\u7981\u7528Spring Security",type:"\u5165\u95e8",filename:"docs/java/disable-spring-security.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#\u4e3a\u4ec0\u4e48\u7981\u7528spring-security",title:"\u4e3a\u4ec0\u4e48\u7981\u7528spring security"},"\u4e3a\u4ec0\u4e48\u7981\u7528spring security"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5982\u4f55\u7981\u7528",title:"\u5982\u4f55\u7981\u7528"},"\u5982\u4f55\u7981\u7528"]]]}}});