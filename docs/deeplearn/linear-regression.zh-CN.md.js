webpackJsonp([28],{1285:function(n,s){n.exports={content:["article",["h2","\u7ebf\u6027\u56de\u5f52\u662f\u4ec0\u4e48"],["p","\u7ed9\u5b9a\u7531d\u4e2a\u5c5e\u6027\u63cf\u8ff0\u7684\u7279\u5f81\u96c6\u5408,"],["p","$$  x = (x_1;x_2;...x_d) $$"],["p","\u5176\u4e2dXi \u662fX \u5728\u7b2ci\u4e2a\u5c5e\u6027\u4f24\u7684\u53d6\u503c\uff0c \u7ebf\u6027\u6a21\u578b\u4f7f\u7528\u52a0\u6743\u7279\u5f81\u548c\u6765\u8fdb\u884c\u9884\u6d4b\u7684\u51fd\u6570\uff0c\u53ef\u5199\u4f5c\u5982\u4e0b\u5f62\u5f0f:"],["p","$$ f(x) = w_1x_1+w_2x_2+...+w_dx_d  + b $$"],["p","\u4e5f\u53ef\u4ee5\u8ba1\u4f5c:"],["p","$$ f(x) = W^T * x  + b $$"],["p","\u5176\u4e2db\u662f\u566a\u58f0\uff0c\u4f7f\u7528\u566a\u58f0\u662f\u4e3a\u4e86\u89e3\u51b3\b\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u6a21\u578b\u8fc7\u5ea6\u62df\u5408\u3002\b\u4f8b\u5982\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\b\u7279\u5f81\u96c6\u5408\uff08\u5e74\u9f84\uff0c\u6559\u80b2\u6c34\u5e73\uff0c\u804c\u4e1a\uff0c\u6bcf\u6708\u5de5\u4f5c\u5c0f\u65f6\u6570\uff0c\u85aa\u8d44\uff09,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7(\u5e74\u9f84\uff0c\u6559\u80b2\u6c34\u5e73\uff0c\u804c\u4e1a\uff0c\u6bcf\u6708\u5de5\u4f5c\u5c0f\u65f6\u6570)\u6765\u9884\u6d4b\u5bf9\u5e94\u7684\u85aa\u8d44\u3002\u7ebf\u6027\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4f5c\u5206\u7c7b\u95ee\u9898\u3002"],["h2","\u4e3a\u4ec0\u4e48\u9009\u62e9\u7ebf\u6027\u56de\u5f52"],["p","\u76f8\u6bd4\u4e0e\u5176\u4ed6\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u7ebf\u6027\u56de\u5f52\u6709\u5982\u4e0b\u4f18\u70b9"],["ul",["li",["p","\u8bad\u7ec3\u8017\u65f6\u77ed"]],["li",["p","\u5728\u5927\u91cf\u7279\u5f81\u96c6\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4f9d\u7136\u80fd\u5de5\u4f5c\u826f\u597d"]],["li",["p","\u5728\u89e3\u91ca\u8fd0\u884c\u548c\u8c03\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u6bd4\u5176\u4ed6\u7b97\u6cd5\u66f4\u5bb9\u6613"]],["li",["p","\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5f88\u591a\u5176\u4ed6\u590d\u6742\u7684\u7b97\u6cd5\u4e2d\u90fd\u6709\u5e94\u7528\u5230\b\u7ebf\u6027\u6a21\u578b"]]],["h2","\u5b9e\u73b0"],["p","Tensorflow \u63d0\u4f9b\u4e86\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0ctensorflow api \u63d0\u4f9b\u4e86\u4f4e\u9636\uff0c\u4e2d\u9636\uff0c\u9ad8\u9636\u4e09\u79cd\u4e0d\u540c\u7684api\u6765\b\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\uff0c\b\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u901a\u8fc7\u4e09\u79cd\u4e0d\u540c\u65b9\u5f0f\u6765\u5b9e\u73b0\u7ebf\u6027\u6a21\u578b."],["p",["img",{title:null,src:"./assets/api_level.png",alt:"Tensorflow API Level"}]],["ul",["li",["p","\u4f4e\u9636API"]]],["pre",{lang:null,highlighted:'import numpy as np\nimport tensorflow as tf\n\n# \u901a\u8fc7numpy \u6784\u9020\u6570\u636e\uff0c\u8fd9\u91cc\u9700\u6307\u660e\u6570\u636etype\uff0c\u4fdd\u8bc1\u548ctensorflow\u7edf\u4e00\n\nx_train <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token function">linspace</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\ny_train <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>x_train<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span><span class="token function">uniform</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\n\ndef <span class="token function">build_low_level_linear_model</span><span class="token punctuation">(</span>x_data<span class="token punctuation">,</span> y_data<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n    x <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token function">placeholder</span><span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\n    y_actual <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token function">placeholder</span><span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span>None<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\n\n    w <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token function">Variable</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span><span class="token function">random_normal</span><span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">\'weights\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    bias <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token function">Variable</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span><span class="token function">random_normal</span><span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">\'bias\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    y_predict <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span><span class="token function">matmul</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">,</span> bias<span class="token punctuation">)</span>   # define the predict model\n\n    <span class="token keyword">with</span> tf<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span> as sess<span class="token punctuation">:</span>\n        sess<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span><span class="token function">global_variables_initializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        optimizer <span class="token operator">=</span> tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span><span class="token function">GradientDescentOptimizer</span><span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span>     \n        loss <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token function">reduce_mean</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span><span class="token function">square</span><span class="token punctuation">(</span>y_actual <span class="token operator">-</span> y_predict<span class="token punctuation">)</span><span class="token punctuation">)</span>   # \b\u5b9a\u4e49\u635f\u5931\u51fd\u6570\n        train_step <span class="token operator">=</span> optimizer<span class="token punctuation">.</span><span class="token function">minimize</span><span class="token punctuation">(</span>loss<span class="token punctuation">)</span>                    # \b\u4f18\u5316\u635f\u5931\n        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n            rand_index <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span><span class="token function">choice</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>x_data<span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>  # \u6bcf\u6b21\u968f\u673a\u4ece\b\u6d4b\u8bd5\u6570\u636e\u4e2d\u9009\u51fa<span class="token number">50</span>\u6761\n            rand_x <span class="token operator">=</span> x_data<span class="token punctuation">[</span>rand_index<span class="token punctuation">]</span>\n            rand_y <span class="token operator">=</span> y_data<span class="token punctuation">[</span>rand_index<span class="token punctuation">]</span>\n            sess<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>train_step<span class="token punctuation">,</span> feed_dict<span class="token operator">=</span>{x<span class="token punctuation">:</span> rand_x<span class="token punctuation">,</span> y_actual<span class="token punctuation">:</span> rand_y}<span class="token punctuation">)</span>\n            temp_loss <span class="token operator">=</span> sess<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>loss<span class="token punctuation">,</span> feed_dict<span class="token operator">=</span>{x<span class="token punctuation">:</span> rand_x<span class="token punctuation">,</span> y_actual<span class="token punctuation">:</span> rand_y}<span class="token punctuation">)</span>\n            <span class="token punctuation">[</span><span class="token punctuation">[</span>weight<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> sess<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>\n            <span class="token punctuation">[</span><span class="token punctuation">[</span>b_value<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> sess<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>bias<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> % <span class="token number">25</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>\n                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">\'Step # {:>4d}, W={:.4f}, bias={:.4f}, loss={:.4f}\'</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> weight<span class="token punctuation">,</span> b_value<span class="token punctuation">,</span> temp_loss<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n        <span class="token punctuation">[</span><span class="token punctuation">[</span>slope<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> sess<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>\n        <span class="token punctuation">[</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> sess<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>bias<span class="token punctuation">)</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">\'w={:.4f}, bias={:.4f}\'</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>slope<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\ndef <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token function">build_low_level_linear_model</span><span class="token punctuation">(</span>x_train<span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y_train<span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    tf<span class="token punctuation">.</span>logging<span class="token punctuation">.</span><span class="token function">set_verbosity</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>\n    <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code","import numpy as np\nimport tensorflow as tf\n\n# \u901a\u8fc7numpy \u6784\u9020\u6570\u636e\uff0c\u8fd9\u91cc\u9700\u6307\u660e\u6570\u636etype\uff0c\u4fdd\u8bc1\u548ctensorflow\u7edf\u4e00\n\nx_train = np.linspace(-3, 3, 100, dtype=np.float32)\ny_train = np.array((np.sin(x_train) + np.random.uniform(-0.5, 0.5, 100)), dtype=np.float32)\n\ndef build_low_level_linear_model(x_data, y_data):\n\n    x = tf.placeholder(shape=[None, 1], dtype=tf.float32)\n    y_actual = tf.placeholder(shape=[None, 1], dtype=tf.float32)\n\n    w = tf.Variable(tf.random_normal(shape=[1, 1], name='weights'))\n    bias = tf.Variable(tf.random_normal(shape=[1, 1], name='bias'))\n\n    y_predict = tf.add(tf.matmul(x, w), bias)   # define the predict model\n\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n        optimizer = tf.train.GradientDescentOptimizer(0.01)     \n        loss = tf.reduce_mean(tf.square(y_actual - y_predict))   # \b\u5b9a\u4e49\u635f\u5931\u51fd\u6570\n        train_step = optimizer.minimize(loss)                    # \b\u4f18\u5316\u635f\u5931\n        for i in range(100):\n            rand_index = np.random.choice(len(x_data), size=50)  # \u6bcf\u6b21\u968f\u673a\u4ece\b\u6d4b\u8bd5\u6570\u636e\u4e2d\u9009\u51fa50\u6761\n            rand_x = x_data[rand_index]\n            rand_y = y_data[rand_index]\n            sess.run(train_step, feed_dict={x: rand_x, y_actual: rand_y})\n            temp_loss = sess.run(loss, feed_dict={x: rand_x, y_actual: rand_y})\n            [[weight]] = sess.run(w)\n            [[b_value]] = sess.run(bias)\n            if (i + 1) % 25 == 0:\n                print('Step # {:>4d}, W={:.4f}, bias={:.4f}, loss={:.4f}'.format(i+1, weight, b_value, temp_loss))\n\n        [[slope]] = sess.run(w)\n        [[b]] = sess.run(bias)\n        print('w={:.4f}, bias={:.4f}'.format(slope, b))\n\ndef main():\n    build_low_level_linear_model(x_train.reshape((100, 1)), y_train.reshape((100, 1)))\n\nif __name__ == '__main__':\n    tf.logging.set_verbosity(tf.logging.INFO)\n    main()"]],["p","\u8f93\u51fa\uff1a"],["pre",{lang:null,highlighted:'<span class="token keyword">Step</span> #   <span class="token number">25</span><span class="token punctuation">,</span> W<span class="token operator">=</span><span class="token number">0.5588</span><span class="token punctuation">,</span> bias<span class="token operator">=</span><span class="token operator">-</span><span class="token number">0.0006</span><span class="token punctuation">,</span> loss<span class="token operator">=</span><span class="token number">0.5133</span>\n<span class="token keyword">Step</span> #   <span class="token number">50</span><span class="token punctuation">,</span> W<span class="token operator">=</span><span class="token number">0.3847</span><span class="token punctuation">,</span> bias<span class="token operator">=</span><span class="token number">0.0313</span><span class="token punctuation">,</span> loss<span class="token operator">=</span><span class="token number">0.2159</span>\n<span class="token keyword">Step</span> #   <span class="token number">75</span><span class="token punctuation">,</span> W<span class="token operator">=</span><span class="token number">0.3511</span><span class="token punctuation">,</span> bias<span class="token operator">=</span><span class="token number">0.0522</span><span class="token punctuation">,</span> loss<span class="token operator">=</span><span class="token number">0.2204</span>\n<span class="token keyword">Step</span> #  <span class="token number">100</span><span class="token punctuation">,</span> W<span class="token operator">=</span><span class="token number">0.3565</span><span class="token punctuation">,</span> bias<span class="token operator">=</span><span class="token number">0.0587</span><span class="token punctuation">,</span> loss<span class="token operator">=</span><span class="token number">0.2377</span>\nw<span class="token operator">=</span><span class="token number">0.3565</span><span class="token punctuation">,</span> bias<span class="token operator">=</span><span class="token number">0.0587</span>'},["code","Step #   25, W=0.5588, bias=-0.0006, loss=0.5133\nStep #   50, W=0.3847, bias=0.0313, loss=0.2159\nStep #   75, W=0.3511, bias=0.0522, loss=0.2204\nStep #  100, W=0.3565, bias=0.0587, loss=0.2377\nw=0.3565, bias=0.0587"]],["ul",["li",["p","\u4e2d\u9636API"]]],["pre",{lang:null,highlighted:'import numpy as np\nimport tensorflow as tf\n\n# \u901a\u8fc7numpy \u6784\u9020\u6570\u636e\uff0c\u8fd9\u91cc\u9700\u6307\u660e\u6570\u636etype\uff0c\u4fdd\u8bc1\u548ctensorflow\u7edf\u4e00\n\nx_train <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token function">linspace</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\ny_train <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>x_train<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span><span class="token function">uniform</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\n\ndef <span class="token function">build_medium_level_model</span><span class="token punctuation">(</span>x_data<span class="token punctuation">,</span> y_data<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    model <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span><span class="token function">Sequential</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n        tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span><span class="token function">Dense</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">\'linear\'</span><span class="token punctuation">,</span> input_shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    optimizer <span class="token operator">=</span> tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span><span class="token function">RMSPropOptimizer</span><span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span>\n    model<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>loss<span class="token operator">=</span><span class="token string">\'mse\'</span><span class="token punctuation">,</span> optimizer<span class="token operator">=</span>optimizer<span class="token punctuation">,</span> metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">\'mae\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    model<span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span>x_data<span class="token punctuation">,</span> y_data<span class="token punctuation">,</span> epochs<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n\ndef <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token function">build_medium_level_model</span><span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    tf<span class="token punctuation">.</span>logging<span class="token punctuation">.</span><span class="token function">set_verbosity</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>\n    <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code","import numpy as np\nimport tensorflow as tf\n\n# \u901a\u8fc7numpy \u6784\u9020\u6570\u636e\uff0c\u8fd9\u91cc\u9700\u6307\u660e\u6570\u636etype\uff0c\u4fdd\u8bc1\u548ctensorflow\u7edf\u4e00\n\nx_train = np.linspace(-3, 3, 100, dtype=np.float32)\ny_train = np.array((np.sin(x_train) + np.random.uniform(-0.5, 0.5, 100)), dtype=np.float32)\n\ndef build_medium_level_model(x_data, y_data):\n    model = tf.keras.Sequential([\n        tf.keras.layers.Dense(1, activation='linear', input_shape=(1,))\n    ])\n    optimizer = tf.train.RMSPropOptimizer(0.01)\n    model.compile(loss='mse', optimizer=optimizer, metrics=['mae'])\n    model.fit(x_data, y_data, epochs=100, batch_size=50, shuffle=True)\n\ndef main():\n    build_medium_level_model(x_train, y_train)\n\nif __name__ == '__main__':\n    tf.logging.set_verbosity(tf.logging.INFO)\n    main()"]],["p","\u8f93\u51fa\uff1a"],["pre",{lang:null,highlighted:'Epoch <span class="token number">2</span><span class="token operator">/</span><span class="token number">100</span>\n<span class="token number">100</span><span class="token operator">/</span><span class="token number">100</span> <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token punctuation">]</span> <span class="token operator">-</span> 0s 16us<span class="token operator">/</span><span class="token keyword">step</span> <span class="token operator">-</span> loss<span class="token punctuation">:</span> <span class="token number">1.8553</span> <span class="token operator">-</span> mean_absolute_error<span class="token punctuation">:</span> <span class="token number">1.0373</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\nEpoch <span class="token number">100</span><span class="token operator">/</span><span class="token number">100</span>\n <span class="token number">50</span><span class="token operator">/</span><span class="token number">100</span> <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token operator">-</span> ETA<span class="token punctuation">:</span> 0s <span class="token operator">-</span> loss<span class="token punctuation">:</span> <span class="token number">0.1916</span> <span class="token operator">-</span> mean_absolute_error<span class="token punctuation">:</span> <span class="token number">0.3611</span>\n<span class="token number">100</span><span class="token operator">/</span><span class="token number">100</span> <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token punctuation">]</span> <span class="token operator">-</span> 0s 59us<span class="token operator">/</span><span class="token keyword">step</span> <span class="token operator">-</span> loss<span class="token punctuation">:</span> <span class="token number">0.2126</span> <span class="token operator">-</span> mean_absolute_error<span class="token punctuation">:</span> <span class="token number">0.3792</span>'},["code","Epoch 2/100\n100/100 [==============================] - 0s 16us/step - loss: 1.8553 - mean_absolute_error: 1.0373\n...\n...\nEpoch 100/100\n 50/100 [==============>...............] - ETA: 0s - loss: 0.1916 - mean_absolute_error: 0.3611\n100/100 [==============================] - 0s 59us/step - loss: 0.2126 - mean_absolute_error: 0.3792"]],["ul",["li",["p","\u9ad8\u9636API"]]],["pre",{lang:null,highlighted:'import os\nimport numpy as np\nimport tensorflow as tf\n\nos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">\'TF_CPP_MIN_LOG_LEVEL\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">\'2\'</span>\n\n\nx_train <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token function">linspace</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\ny_train <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>x_train<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span><span class="token function">uniform</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\n\ninput_fn_train <span class="token operator">=</span> tf<span class="token punctuation">.</span>estimator<span class="token punctuation">.</span>inputs<span class="token punctuation">.</span><span class="token function">numpy_input_fn</span><span class="token punctuation">(</span>{<span class="token string">\'x\'</span><span class="token punctuation">:</span> x_train}<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> num_epochs<span class="token operator">=</span>None<span class="token punctuation">)</span>\n\ndef <span class="token function">build_estimator_model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    feature_columns <span class="token operator">=</span> <span class="token punctuation">[</span>tf<span class="token punctuation">.</span>feature_column<span class="token punctuation">.</span><span class="token function">numeric_column</span><span class="token punctuation">(</span><span class="token string">\'x\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n    regressor <span class="token operator">=</span> tf<span class="token punctuation">.</span>estimator<span class="token punctuation">.</span><span class="token function">LinearRegressor</span><span class="token punctuation">(</span>\n        feature_columns<span class="token operator">=</span>feature_columns<span class="token punctuation">,</span>\n        optimizer<span class="token operator">=</span>tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span><span class="token function">RMSPropOptimizer</span><span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loss_reduction<span class="token operator">=</span>tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>Reduction<span class="token punctuation">.</span>SUM_BY_NONZERO_WEIGHTS<span class="token punctuation">,</span>\n        model_dir<span class="token operator">=</span><span class="token string">\'./output\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span>\n    regressor<span class="token punctuation">.</span><span class="token function">train</span><span class="token punctuation">(</span>input_fn<span class="token operator">=</span>input_fn_train<span class="token punctuation">,</span> steps<span class="token operator">=</span>EPOCHS<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> key <span class="token keyword">in</span> regressor<span class="token punctuation">.</span><span class="token function">get_variable_names</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">\'key=%s, value=%s\'</span> % <span class="token punctuation">(</span>key<span class="token punctuation">,</span> regressor<span class="token punctuation">.</span><span class="token function">get_variable_value</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n\ndef <span class="token function">main</span><span class="token punctuation">(</span>unused_args<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token function">build_estimator_model</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    tf<span class="token punctuation">.</span>logging<span class="token punctuation">.</span><span class="token function">set_verbosity</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">)</span>\n    tf<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span>'},["code","import os\nimport numpy as np\nimport tensorflow as tf\n\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n\n\nx_train = np.linspace(-3, 3, 100, dtype=np.float32)\ny_train = np.array((np.sin(x_train) + np.random.uniform(-0.5, 0.5, 100)), dtype=np.float32)\n\ninput_fn_train = tf.estimator.inputs.numpy_input_fn({'x': x_train}, y_train, batch_size=BATCH_SIZE, shuffle=True, num_epochs=None)\n\ndef build_estimator_model():\n    feature_columns = [tf.feature_column.numeric_column('x')]\n    regressor = tf.estimator.LinearRegressor(\n        feature_columns=feature_columns,\n        optimizer=tf.train.RMSPropOptimizer(0.01),\n        loss_reduction=tf.losses.Reduction.SUM_BY_NONZERO_WEIGHTS,\n        model_dir='./output',\n    )\n    regressor.train(input_fn=input_fn_train, steps=EPOCHS)\n    for key in regressor.get_variable_names():\n        print('key=%s, value=%s' % (key, regressor.get_variable_value(key)))\n\n\ndef main(unused_args):\n    build_estimator_model()\n\nif __name__ == '__main__':\n    tf.logging.set_verbosity(tf.logging.INFO)\n    tf.app.run(main)"]],["p","\u8f93\u51fa\uff1a"],["pre",{lang:null,highlighted:'WARNING<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>From <span class="token operator">/</span>Library<span class="token operator">/</span>Frameworks<span class="token operator">/</span>Python<span class="token punctuation">.</span>framework<span class="token operator">/</span>Versions<span class="token operator">/</span><span class="token number">3.6</span><span class="token operator">/</span>lib<span class="token operator">/</span>python3<span class="token punctuation">.</span><span class="token number">6</span><span class="token operator">/</span>site<span class="token operator">-</span>packages<span class="token operator">/</span>tensorflow<span class="token operator">/</span>python<span class="token operator">/</span>estimator<span class="token operator">/</span>inputs<span class="token operator">/</span>queues<span class="token operator">/</span>feeding_functions<span class="token punctuation">.</span>py<span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">:</span> add_queue_runner <span class="token punctuation">(</span>from tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>training<span class="token punctuation">.</span>queue_runner_impl<span class="token punctuation">)</span> is deprecated <span class="token operator">and</span> will be removed <span class="token keyword">in</span> a future version<span class="token punctuation">.</span>\nInstructions <span class="token keyword">for</span> updating<span class="token punctuation">:</span>\n<span class="token keyword">To</span> construct input pipelines<span class="token punctuation">,</span> use the `tf<span class="token punctuation">.</span>data` module<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Calling model_fn<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Done calling model_fn<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Create CheckpointSaverHook<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Graph was finalized<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Restoring parameters from <span class="token punctuation">.</span><span class="token operator">/</span>output<span class="token operator">/</span>model<span class="token punctuation">.</span>ckpt<span class="token operator">-</span><span class="token number">100</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Running local_init_op<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Done running local_init_op<span class="token punctuation">.</span>\nWARNING<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>From <span class="token operator">/</span>Library<span class="token operator">/</span>Frameworks<span class="token operator">/</span>Python<span class="token punctuation">.</span>framework<span class="token operator">/</span>Versions<span class="token operator">/</span><span class="token number">3.6</span><span class="token operator">/</span>lib<span class="token operator">/</span>python3<span class="token punctuation">.</span><span class="token number">6</span><span class="token operator">/</span>site<span class="token operator">-</span>packages<span class="token operator">/</span>tensorflow<span class="token operator">/</span>python<span class="token operator">/</span>training<span class="token operator">/</span>monitored_session<span class="token punctuation">.</span>py<span class="token punctuation">:</span><span class="token number">804</span><span class="token punctuation">:</span> start_queue_runners <span class="token punctuation">(</span>from tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>training<span class="token punctuation">.</span>queue_runner_impl<span class="token punctuation">)</span> is deprecated <span class="token operator">and</span> will be removed <span class="token keyword">in</span> a future version<span class="token punctuation">.</span>\nInstructions <span class="token keyword">for</span> updating<span class="token punctuation">:</span>\n<span class="token keyword">To</span> construct input pipelines<span class="token punctuation">,</span> use the `tf<span class="token punctuation">.</span>data` module<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Saving checkpoints <span class="token keyword">for</span> <span class="token number">100</span> into <span class="token punctuation">.</span><span class="token operator">/</span>output<span class="token operator">/</span>model<span class="token punctuation">.</span>ckpt<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>loss <span class="token operator">=</span> <span class="token number">0.6197379</span><span class="token punctuation">,</span> <span class="token keyword">step</span> <span class="token operator">=</span> <span class="token number">101</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Saving checkpoints <span class="token keyword">for</span> <span class="token number">200</span> into <span class="token punctuation">.</span><span class="token operator">/</span>output<span class="token operator">/</span>model<span class="token punctuation">.</span>ckpt<span class="token punctuation">.</span>\nINFO<span class="token punctuation">:</span>tensorflow<span class="token punctuation">:</span>Loss <span class="token keyword">for</span> final <span class="token keyword">step</span><span class="token punctuation">:</span> <span class="token number">0.2759063</span><span class="token punctuation">.</span>'},["code","WARNING:tensorflow:From /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py:500: add_queue_runner (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\nInstructions for updating:\nTo construct input pipelines, use the `tf.data` module.\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Done calling model_fn.\nINFO:tensorflow:Create CheckpointSaverHook.\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Restoring parameters from ./output/model.ckpt-100\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nWARNING:tensorflow:From /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py:804: start_queue_runners (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\nInstructions for updating:\nTo construct input pipelines, use the `tf.data` module.\nINFO:tensorflow:Saving checkpoints for 100 into ./output/model.ckpt.\nINFO:tensorflow:loss = 0.6197379, step = 101\nINFO:tensorflow:Saving checkpoints for 200 into ./output/model.ckpt.\nINFO:tensorflow:Loss for final step: 0.2759063."]],["p","\b\u53ef\u4ee5\u770b\u5230\u4e09\u79cd\u65b9\u5f0f\u8ba1\u7b97\u51fa\b\u7684\u7ebf\u6027\u6a21\u578b\u7684\u635f\u5931\u503c\u76f8\u5dee\u4e0d\u5927\uff0c\u5728100\u6b21\u8fed\u4ee3\u540e\uff0c\u4f4e\u9636\uff0c\u4e2d\u9636\uff0c\u9ad8\u9636API\b\u8ba1\u7b97\u7684\u6700\u7ec8loss\u5206\u522b\u662f0.2377\uff0c0.3792\uff0c0.2759"],["table",["thead",["tr",["th"],["th","\u5b9e\u73b0\u65b9\u5f0f"],["th","\u4f18\u70b9"],["th","\u7f3a\u70b9"]]],["tbody",["tr",["td","\u4f4e\u9636API"],["td","\u901a\u8fc7\u5b9a\u4e49f(x) = w *x +b"],["td","\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u5b9e\u73b0\u8fc7\u7a0b\u7684\u6bcf\u4e00\u4e2a\u73af\u8282\uff0c\b\u63a7\u5236\u6574\u4e2a\u5b9e\u73b0\u8fc7\u7a0b"],["td","\u5b9e\u73b0\u590d\u6742\uff0c\u8017\u65f6"]],["tr",["td","\u4e2d\u9636API"],["td","\u901a\u8fc7Keras API"],["td","\u53ef\u4ee5\u901a\u8fc7keras\b\u5df2\u7ecf\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u7075\u6d3b\u6539\u53d8\u6a21\u578b\u5b9e\u73b0\uff0c\u6a21\u578b\u53ef\u6269\u5c55\u6027\u5f3a\uff0c\u5b9e\u73b0\u7b80\u5355"],["td","\b---"]],["tr",["td","\u9ad8\u9636API"],["td","\u901a\u8fc7Estimator"],["td","Estimator\u9ad8\u5ea6\u5c01\u88c5\uff0c\u53ef\u4ee5\u548ctensorboard\u5f88\u597d\u7684\u7ed3\u5408\uff0c\u5e76\u63d0\u4f9b\u4e86model\u7684\u81ea\u5b9a\u4e49\u6269\u5c55\uff0c\u5b9e\u73b0\u7b80\u5355"],["td","\u5982\u679c\b\u9700\u8981\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u589e\u52a0\u5176\u4ed6\u64cd\u4f5c\uff0c\u9700\u8981\u81ea\u5b9a\u4e49Hook\uff0cListener\b"]]]]],meta:{order:1,title:"\u7ebf\u6027\u6a21\u578b",type:"\u5165\u95e8",filename:"docs/deeplearn/linear-regression.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#\u7ebf\u6027\u56de\u5f52\u662f\u4ec0\u4e48",title:"\u7ebf\u6027\u56de\u5f52\u662f\u4ec0\u4e48"},"\u7ebf\u6027\u56de\u5f52\u662f\u4ec0\u4e48"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u4e3a\u4ec0\u4e48\u9009\u62e9\u7ebf\u6027\u56de\u5f52",title:"\u4e3a\u4ec0\u4e48\u9009\u62e9\u7ebf\u6027\u56de\u5f52"},"\u4e3a\u4ec0\u4e48\u9009\u62e9\u7ebf\u6027\u56de\u5f52"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5b9e\u73b0",title:"\u5b9e\u73b0"},"\u5b9e\u73b0"]]]}}});