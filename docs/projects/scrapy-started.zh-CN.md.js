webpackJsonp([0],{1320:function(n,s){n.exports={content:["article",["h2","Scrapy \u5b89\u88c5"],["pre",{lang:null,highlighted:"$ pip install scrapy\n$ pip install pymongo"},["code","$ pip install scrapy\n$ pip install pymongo"]],["h2","\u521d\u59cb\u5316\u9879\u76ee"],["p","\u5728\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u751f\u6210\u9879\u76ee"],["pre",{lang:null,highlighted:'scrapy startproject beauty\n\n# \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b<span class="token punctuation">:</span>\n|<span class="token operator">-</span>beauty\n | |<span class="token operator">-</span>spiders\n | |<span class="token operator">-</span>__init__<span class="token punctuation">.</span>py\n | |<span class="token operator">-</span>__pycache__\n | |<span class="token operator">-</span>middlewares<span class="token punctuation">.</span>py\n | |<span class="token operator">-</span>settings<span class="token punctuation">.</span>py                 # \u5168\u5c40\u73af\u5883\u914d\u7f6e\u6587\u4ef6\n | |<span class="token operator">-</span>items<span class="token punctuation">.</span>py                    # \b\u5c06\u722c\u53bb\u7684\u6570\u636e\u5c01\u88c5\u5728\u6b64\u5b9e\u4f53\u4e2d\n | |<span class="token operator">-</span>pipelines<span class="token punctuation">.</span>py                # \u7ba1\u9053\uff0c\b\b\u5bf9\u722c\u53d6\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u904d\u5386\u6bcf\u4e00\u4e2apipeline\n |<span class="token operator">-</span>scrapy<span class="token punctuation">.</span>cfg'},["code","scrapy startproject beauty\n\n# \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b:\n|-beauty\n | |-spiders\n | |-__init__.py\n | |-__pycache__\n | |-middlewares.py\n | |-settings.py                 # \u5168\u5c40\u73af\u5883\u914d\u7f6e\u6587\u4ef6\n | |-items.py                    # \b\u5c06\u722c\u53bb\u7684\u6570\u636e\u5c01\u88c5\u5728\u6b64\u5b9e\u4f53\u4e2d\n | |-pipelines.py                # \u7ba1\u9053\uff0c\b\b\u5bf9\u722c\u53d6\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u904d\u5386\u6bcf\u4e00\u4e2apipeline\n |-scrapy.cfg"]],["h2","\u521b\u5efa\u722c\u866b\u6838\u5fc3\u6a21\u5757"],["pre",{lang:null,highlighted:'scrapy genspider mm mm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>com\n\n# \u6267\u884c\u6b64\u547d\u4ee4\u4e4b\u540e\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b<span class="token punctuation">:</span>\n\n |<span class="token operator">-</span>beauty\n | |<span class="token operator">-</span>spiders\n | | |<span class="token operator">-</span>__init__<span class="token punctuation">.</span>py\n | | |<span class="token operator">-</span>__pycache__\n | | |<span class="token operator">-</span>mm<span class="token punctuation">.</span>py\n | |<span class="token operator">-</span>__init__<span class="token punctuation">.</span>py\n | |<span class="token operator">-</span>__pycache__\n | | |<span class="token operator">-</span>settings<span class="token punctuation">.</span>cpython<span class="token operator">-</span><span class="token number">36</span><span class="token punctuation">.</span>pyc\n | | |<span class="token operator">-</span>__init__<span class="token punctuation">.</span>cpython<span class="token operator">-</span><span class="token number">36</span><span class="token punctuation">.</span>pyc\n | |<span class="token operator">-</span>middlewares<span class="token punctuation">.</span>py\n | |<span class="token operator">-</span>settings<span class="token punctuation">.</span>py\n | |<span class="token operator">-</span>items<span class="token punctuation">.</span>py\n | |<span class="token operator">-</span>pipelines<span class="token punctuation">.</span>py\n |<span class="token operator">-</span>scrapy<span class="token punctuation">.</span>cfg'},["code","scrapy genspider mm mm.taobao.com\n\n# \u6267\u884c\u6b64\u547d\u4ee4\u4e4b\u540e\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b:\n\n |-beauty\n | |-spiders\n | | |-__init__.py\n | | |-__pycache__\n | | |-mm.py\n | |-__init__.py\n | |-__pycache__\n | | |-settings.cpython-36.pyc\n | | |-__init__.cpython-36.pyc\n | |-middlewares.py\n | |-settings.py\n | |-items.py\n | |-pipelines.py\n |-scrapy.cfg"]],["h2","\u5b9e\u73b0\u722c\u53d6\u6587\u7ae0\u903b\u8f91"],["pre",{lang:null,highlighted:'# <span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span> coding<span class="token punctuation">:</span> utf<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span>\nimport scrapy\nimport logging\nimport re\nimport json\nfrom scrapy<span class="token punctuation">.</span>loader import ItemLoader\nfrom beauty<span class="token punctuation">.</span>items import BeautyItem\n\nlogger <span class="token operator">=</span> logging<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">\'beautyLogger\'</span><span class="token punctuation">)</span>\n\nclass <span class="token function">MmSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    name <span class="token operator">=</span> <span class="token string">\'mm\'</span>\n    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'mm.taobao.com\'</span><span class="token punctuation">]</span>\n    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">\'https://mm.taobao.com/tstar/search/tstar_model.do?_input_charset=utf-8&amp;currentPage=1&amp;pageSize=100\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span>\n\n    def <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        # <span class="token keyword">for</span> url <span class="token keyword">in</span> self<span class="token punctuation">.</span>start_urls<span class="token punctuation">:</span>\n        #     yield scrapy<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parseSeeds<span class="token punctuation">)</span>\n        <span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n            url <span class="token operator">=</span> <span class="token string">\'https://mm.taobao.com/tstar/search/tstar_model.do?_input_charset=utf-8&amp;currentPage={0}&amp;pageSize=100\'</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>\n            yield scrapy<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parseSeeds<span class="token punctuation">)</span>\n        \n\n    def <span class="token function">parseSeeds</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        content <span class="token operator">=</span> response<span class="token punctuation">.</span>body\n        content <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">\'gb2312\'</span><span class="token punctuation">)</span>\n        res <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">loads</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>\n        seeds <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">\'searchDOList\'</span><span class="token punctuation">]</span>\n        <span class="token keyword">for</span> seed <span class="token keyword">in</span> seeds<span class="token punctuation">:</span>\n            name <span class="token operator">=</span> seed<span class="token punctuation">[</span><span class="token string">\'realName\'</span><span class="token punctuation">]</span>\n            height <span class="token operator">=</span> seed<span class="token punctuation">[</span><span class="token string">\'height\'</span><span class="token punctuation">]</span>\n            city <span class="token operator">=</span> seed<span class="token punctuation">[</span><span class="token string">\'city\'</span><span class="token punctuation">]</span>\n            weight <span class="token operator">=</span> seed<span class="token punctuation">[</span><span class="token string">\'weight\'</span><span class="token punctuation">]</span>\n            avatar <span class="token operator">=</span> <span class="token string">\'http:\'</span><span class="token operator">+</span>seed<span class="token punctuation">[</span><span class="token string">\'avatarUrl\'</span><span class="token punctuation">]</span>\n            url <span class="token operator">=</span> <span class="token string">\'https://mm.taobao.com/self/aiShow.htm?userId=\'</span><span class="token operator">+</span><span class="token function">str</span><span class="token punctuation">(</span>seed<span class="token punctuation">[</span><span class="token string">\'userId\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n            meta <span class="token operator">=</span> { <span class="token string">\'name\'</span><span class="token punctuation">:</span> name<span class="token punctuation">,</span> <span class="token string">\'avatar\'</span><span class="token punctuation">:</span> avatar<span class="token punctuation">,</span> <span class="token string">\'city\'</span><span class="token punctuation">:</span> city<span class="token punctuation">,</span> <span class="token string">\'height\'</span><span class="token punctuation">:</span> height<span class="token punctuation">,</span> <span class="token string">\'weight\'</span><span class="token punctuation">:</span>weight }\n            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">\'name=%s, height=%s, city=%s, weight=%s, avatar=%s,url=%s\'</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span>height<span class="token punctuation">,</span>city<span class="token punctuation">,</span>weight<span class="token punctuation">,</span>avatar<span class="token punctuation">,</span>url<span class="token punctuation">)</span>\n            yield scrapy<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parseDetails<span class="token punctuation">,</span> meta<span class="token operator">=</span>meta<span class="token punctuation">)</span>\n\n    \n    def <span class="token function">parseDetails</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        meta <span class="token operator">=</span> response<span class="token punctuation">.</span>meta\n        # logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">\'name=%s\'</span><span class="token punctuation">,</span>meta<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        allImages <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">\'img\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">xpath</span><span class="token punctuation">(</span><span class="token string">\'@src\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">for</span> image <span class="token keyword">in</span> allImages<span class="token punctuation">:</span>\n            <span class="token keyword">if</span> <span class="token string">\'\'</span>!<span class="token operator">=</span>image<span class="token punctuation">.</span><span class="token function">strip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> image<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'img.alicdn.com/imgextra\'</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>\n                images<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'http:\'</span><span class="token operator">+</span>image<span class="token punctuation">)</span>\n                break\n        details <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">xpath</span><span class="token punctuation">(</span><span class="token string">\'//div[@id="J_ScaleImg"]\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        details <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>details<span class="token punctuation">)</span>\n        telephone <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">findall</span><span class="token punctuation">(</span>r<span class="token string">\'1\\d{10}\'</span><span class="token punctuation">,</span>details<span class="token punctuation">)</span>\n        loader <span class="token operator">=</span> <span class="token function">ItemLoader</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token function">BeautyItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token operator">=</span>response<span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">,</span> meta<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'city\'</span><span class="token punctuation">,</span> meta<span class="token punctuation">[</span><span class="token string">\'city\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'avatar\'</span><span class="token punctuation">,</span> meta<span class="token punctuation">[</span><span class="token string">\'avatar\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'height\'</span><span class="token punctuation">,</span> meta<span class="token punctuation">[</span><span class="token string">\'height\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'weight\'</span><span class="token punctuation">,</span> meta<span class="token punctuation">[</span><span class="token string">\'weight\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'telephone\'</span><span class="token punctuation">,</span> telephone<span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'details\'</span><span class="token punctuation">,</span> details<span class="token punctuation">)</span>\n        loader<span class="token punctuation">.</span><span class="token function">add_value</span><span class="token punctuation">(</span><span class="token string">\'images\'</span><span class="token punctuation">,</span> images<span class="token punctuation">)</span>\n        return loader<span class="token punctuation">.</span><span class="token function">load_item</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code","# -*- coding: utf-8 -*-\nimport scrapy\nimport logging\nimport re\nimport json\nfrom scrapy.loader import ItemLoader\nfrom beauty.items import BeautyItem\n\nlogger = logging.getLogger('beautyLogger')\n\nclass MmSpider(scrapy.Spider):\n    name = 'mm'\n    allowed_domains = ['mm.taobao.com']\n    start_urls = [\n        'https://mm.taobao.com/tstar/search/tstar_model.do?_input_charset=utf-8&currentPage=1&pageSize=100',\n    ]\n\n    def parse(self, response):\n        # for url in self.start_urls:\n        #     yield scrapy.Request(url=url, callback=self.parseSeeds)\n        for index in range(1,2):\n            url = 'https://mm.taobao.com/tstar/search/tstar_model.do?_input_charset=utf-8&currentPage={0}&pageSize=100'.format(index)\n            yield scrapy.Request(url=url, callback=self.parseSeeds)\n        \n\n    def parseSeeds(self, response):\n        content = response.body\n        content = content.decode('gb2312')\n        res = json.loads(content)\n        seeds = res['data']['searchDOList']\n        for seed in seeds:\n            name = seed['realName']\n            height = seed['height']\n            city = seed['city']\n            weight = seed['weight']\n            avatar = 'http:'+seed['avatarUrl']\n            url = 'https://mm.taobao.com/self/aiShow.htm?userId='+str(seed['userId'])\n            meta = { 'name': name, 'avatar': avatar, 'city': city, 'height': height, 'weight':weight }\n            logger.info('name=%s, height=%s, city=%s, weight=%s, avatar=%s,url=%s',name,height,city,weight,avatar,url)\n            yield scrapy.Request(url=url, callback=self.parseDetails, meta=meta)\n\n    \n    def parseDetails(self,response):\n        images = []\n        meta = response.meta\n        # logger.info('name=%s',meta['name'])\n        allImages = response.css('img').xpath('@src').extract()\n        for image in allImages:\n            if ''!=image.strip() and image.find('img.alicdn.com/imgextra') != -1:\n                images.append('http:'+image)\n                break\n        details = response.xpath('//div[@id=\"J_ScaleImg\"]').extract()\n        details = ''.join(details)\n        telephone = re.findall(r'1\\d{10}',details)\n        loader = ItemLoader(item=BeautyItem(), response=response)\n        loader.add_value('name', meta['name'])\n        loader.add_value('city', meta['city'])\n        loader.add_value('avatar', meta['avatar'])\n        loader.add_value('height', meta['height'])\n        loader.add_value('weight', meta['weight'])\n        loader.add_value('telephone', telephone)\n        loader.add_value('details', details)\n        loader.add_value('images', images)\n        return loader.load_item()"]],["h2","\u5b9a\u4e49\u7ba1\u9053"],["p","\u8fd9\u91cc\u6211\u4eec\b\u8981\b\u628a\u7f51\u4e0a\u722c\u53d6\u56de\u6765\u7684\u56fe\u7247\u5b58\u50a8\u5230\u672c\u5730\u6587\u4ef6\u5939\uff0c\u5e76\u628a\u7f51\u4e0a\u5bf9\u5e94\u7684\u6240\u9700\u7684\u5143\u7d20\u5b58\u50a8\u5230mongodb\u4e2d\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9e\u73b0\u4e09\u4e2aPipeline."],["ul",["li",["p","CustomImagesPipeline: \u6211\u4eec\u4ece\u7f51\u7ad9\u4e2d\u722c\u53d6\u5230\u7684\u662furl\u5730\u5740\uff0c\u8fd9\u91cc\u901a\u8fc7url\u5730\u5740\u83b7\u53d6\u56fe\u7247\uff0c\u5e76\u5c06\u56fe\u7247\u4e0b\u8f7d\u5230\u672c\u5730\u7684\u76ee\u5f55"]],["li",["p","ItemPipeline\uff1a \u5c06\u7f51\u7ad9\u4e2d\u722c\u53d6\u5230\u7684\u5404\u79cdhtml\u5143\u7d20\u8f6c\u5316\u6210object\u5bf9\u8c61"]],["li",["p","BeautyPipeline\uff1a\b\u5c06object\u5bf9\u8c61\u5b58\u50a8\u5230Mongodb\u4e2d"]]],["pre",{lang:null,highlighted:'# <span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span> coding<span class="token punctuation">:</span> utf<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span>\n\n# Define your item pipelines here\n#\n# Don\'t forget <span class="token keyword">to</span> add your pipeline <span class="token keyword">to</span> the ITEM_PIPELINES setting\n# See<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>doc<span class="token punctuation">.</span>scrapy<span class="token punctuation">.</span>org<span class="token operator">/</span>en<span class="token operator">/</span>latest<span class="token operator">/</span>topics<span class="token operator">/</span>item<span class="token operator">-</span>pipeline<span class="token punctuation">.</span>html\nimport pymongo\nimport scrapy\nimport logging\nimport os<span class="token punctuation">,</span>shutil\n\nfrom beauty<span class="token punctuation">.</span>items import BeautyItem \nfrom scrapy<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>project import get_project_settings\nfrom scrapy<span class="token punctuation">.</span>pipelines<span class="token punctuation">.</span>images import ImagesPipeline\nfrom scrapy<span class="token punctuation">.</span>exceptions import DropItem\n\nlogger <span class="token operator">=</span> logging<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">\'beautyLogger\'</span><span class="token punctuation">)</span>\nclass <span class="token function">CustomImagesPipeline</span><span class="token punctuation">(</span>ImagesPipeline<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n    def <span class="token function">get_media_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">for</span> image_url <span class="token keyword">in</span> item<span class="token punctuation">[</span><span class="token string">\'images\'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>\n            yield scrapy<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span>url<span class="token operator">=</span>image_url<span class="token punctuation">,</span>meta<span class="token operator">=</span>{<span class="token string">\'name\'</span><span class="token punctuation">:</span>item<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span>}<span class="token punctuation">)</span>\n\n    def <span class="token function">item_completed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> results<span class="token punctuation">,</span> item<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">\'*************download image complete*************\'</span><span class="token punctuation">)</span>\n        settings <span class="token operator">=</span> <span class="token function">get_project_settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        store_path <span class="token operator">=</span> settings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'IMAGES_STORE\'</span><span class="token punctuation">)</span>\n        destination_folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>store_path<span class="token punctuation">,</span>item<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>destination_folder<span class="token punctuation">)</span><span class="token punctuation">:</span>\n           os<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span>destination_folder<span class="token punctuation">)</span>\n\n        image_paths <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token string">\'path\'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> ok<span class="token punctuation">,</span> x <span class="token keyword">in</span> results <span class="token keyword">if</span> ok<span class="token punctuation">]</span>\n        <span class="token keyword">if</span> <span class="token operator">not</span> image_paths<span class="token punctuation">:</span>\n            raise <span class="token function">DropItem</span><span class="token punctuation">(</span><span class="token string">"Item contains no images"</span><span class="token punctuation">)</span>\n        <span class="token keyword">for</span> image_path <span class="token keyword">in</span> image_paths<span class="token punctuation">:</span>\n            image_name <span class="token operator">=</span> image_path<span class="token punctuation">[</span>image_path<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>\n            source_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>store_path<span class="token punctuation">,</span>image_path<span class="token punctuation">)</span>\n            destination_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>destination_folder<span class="token punctuation">,</span>image_name<span class="token punctuation">)</span>\n            shutil<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>source_path<span class="token punctuation">,</span>destination_path<span class="token punctuation">)</span>\n            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">\'*************source path:%s,destination path:%s\'</span><span class="token punctuation">,</span>source_path<span class="token punctuation">,</span>destination_path<span class="token punctuation">)</span>\n        return item\n\n\nclass <span class="token function">ItemPipeline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n    def <span class="token function">getItem</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">if</span> <span class="token function">type</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> is str<span class="token punctuation">:</span>\n            return item\n        elif <span class="token function">type</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> is list <span class="token operator">and</span> <span class="token function">len</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>\n            return item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n        <span class="token keyword">else</span><span class="token punctuation">:</span>\n            return <span class="token string">\'\'</span>\n\n    def <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        item <span class="token operator">=</span> <span class="token function">BeautyItem</span><span class="token punctuation">(</span>\n            name <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            avatar <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">\'avatar\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            city <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">\'city\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            height <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">\'height\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            weight <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">\'weight\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            details <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">\'details\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            telephone <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">\'telephone\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            images <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">\'images\'</span><span class="token punctuation">]</span>\n        <span class="token punctuation">)</span>\n        return item\n\n\nclass <span class="token function">BeautyPipeline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n    collection_name <span class="token operator">=</span> <span class="token string">\'mm\'</span>\n\n    def <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> mongo_uri<span class="token punctuation">,</span> mongo_db<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>mongo_uri <span class="token operator">=</span> mongo_uri\n        self<span class="token punctuation">.</span>mongo_db <span class="token operator">=</span> mongo_db\n\n    <span class="token variable">@classmethod</span>\n    def <span class="token function">from_crawler</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> crawler<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        return <span class="token function">cls</span><span class="token punctuation">(</span>\n            mongo_uri<span class="token operator">=</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'MONGO_URI\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            mongo_db<span class="token operator">=</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'MONGO_DATABASE\'</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span>\n\n    def <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>client <span class="token operator">=</span> pymongo<span class="token punctuation">.</span><span class="token function">MongoClient</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mongo_uri<span class="token punctuation">)</span>\n        self<span class="token punctuation">.</span>db <span class="token operator">=</span> self<span class="token punctuation">.</span>client<span class="token punctuation">[</span>self<span class="token punctuation">.</span>mongo_db<span class="token punctuation">]</span>\n\n    def <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    def <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>db<span class="token punctuation">[</span>self<span class="token punctuation">.</span>collection_name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">insert_one</span><span class="token punctuation">(</span><span class="token function">dict</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        return item'},["code","# -*- coding: utf-8 -*-\n\n# Define your item pipelines here\n#\n# Don't forget to add your pipeline to the ITEM_PIPELINES setting\n# See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html\nimport pymongo\nimport scrapy\nimport logging\nimport os,shutil\n\nfrom beauty.items import BeautyItem \nfrom scrapy.utils.project import get_project_settings\nfrom scrapy.pipelines.images import ImagesPipeline\nfrom scrapy.exceptions import DropItem\n\nlogger = logging.getLogger('beautyLogger')\nclass CustomImagesPipeline(ImagesPipeline):\n\n    def get_media_requests(self, item, info):\n        for image_url in item['images']:\n            yield scrapy.Request(url=image_url,meta={'name':item['name']})\n\n    def item_completed(self, results, item, info):\n        logger.info('*************download image complete*************')\n        settings = get_project_settings()\n        store_path = settings.get('IMAGES_STORE')\n        destination_folder = os.path.join(store_path,item['name'])\n        if not os.path.exists(destination_folder):\n           os.mkdir(destination_folder)\n\n        image_paths = [x['path'] for ok, x in results if ok]\n        if not image_paths:\n            raise DropItem(\"Item contains no images\")\n        for image_path in image_paths:\n            image_name = image_path[image_path.find('/')+1:]\n            source_path = os.path.join(store_path,image_path)\n            destination_path = os.path.join(destination_folder,image_name)\n            shutil.move(source_path,destination_path)\n            logger.info('*************source path:%s,destination path:%s',source_path,destination_path)\n        return item\n\n\nclass ItemPipeline(object):\n\n    def getItem(self,item):\n        if type(item) is str:\n            return item\n        elif type(item) is list and len(item)>0:\n            return item[0]\n        else:\n            return ''\n\n    def process_item(self, item, spider):\n        item = BeautyItem(\n            name = self.getItem(item['name']),\n            avatar = self.getItem(item['avatar']),\n            city = self.getItem(item['city']),\n            height = self.getItem(item['height']),\n            weight = self.getItem(item['weight']),\n            details = self.getItem(item['details']),\n            telephone = self.getItem(item['telephone']),\n            images = item['images']\n        )\n        return item\n\n\nclass BeautyPipeline(object):\n\n    collection_name = 'mm'\n\n    def __init__(self, mongo_uri, mongo_db):\n        self.mongo_uri = mongo_uri\n        self.mongo_db = mongo_db\n\n    @classmethod\n    def from_crawler(cls, crawler):\n        return cls(\n            mongo_uri=crawler.settings.get('MONGO_URI'),\n            mongo_db=crawler.settings.get('MONGO_DATABASE')\n        )\n\n    def open_spider(self, spider):\n        self.client = pymongo.MongoClient(self.mongo_uri)\n        self.db = self.client[self.mongo_db]\n\n    def close_spider(self, spider):\n        self.client.close()\n\n    def process_item(self, item, spider):\n        self.db[self.collection_name].insert_one(dict(item))\n        return item"]],["h2","\u914d\u7f6e\u9879\u76ee\u4f9d\u8d56"],["pre",{lang:null,highlighted:'settings<span class="token punctuation">.</span>py\n\nBOT_NAME <span class="token operator">=</span> <span class="token string">\'beauty\'</span>\n\nSPIDER_MODULES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'beauty.spiders\'</span><span class="token punctuation">]</span>        # \u7cfb\u7edf\u81ea\u52a8\u751f\u6210\nNEWSPIDER_MODULE <span class="token operator">=</span> <span class="token string">\'beauty.spiders\'</span>        # \u7cfb\u7edf\u81ea\u52a8\u751f\u6210\n\n\nMONGO_URI<span class="token operator">=</span><span class="token string">\'mongodb://localhost\'</span>            # Mongodb \u5730\u5740\nMONGO_DATABASE<span class="token operator">=</span><span class="token string">\'beauty\'</span>                    # Mongodb \u6570\u636e\u5e93\n\n# Configure item pipelines\n# See https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>doc<span class="token punctuation">.</span>scrapy<span class="token punctuation">.</span>org<span class="token operator">/</span>en<span class="token operator">/</span>latest<span class="token operator">/</span>topics<span class="token operator">/</span>item<span class="token operator">-</span>pipeline<span class="token punctuation">.</span>html      # \u5b9a\u4e49pipeline \u4f18\u5148\u7ea7\uff0c \u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u4f18\u5148\u6267\u884c\nITEM_PIPELINES <span class="token operator">=</span> {\n   <span class="token string">\'beauty.pipelines.ItemPipeline\'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n   <span class="token string">\'beauty.pipelines.CustomImagesPipeline\'</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span>\n   <span class="token string">\'beauty.pipelines.BeautyPipeline\'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n}\n\nIMAGES_STORE <span class="token operator">=</span> <span class="token string">\'/home/jet/mm/\'</span>                  # \b\b\u56fe\u7247\u5728\u672c\u673a\u5b58\u50a8\u7684\u6839\u76ee\u5f55\nIMAGES_URLS_FIELD <span class="token operator">=</span> <span class="token string">\'images\'</span>                    # \b\b\u5b9e\u4f53\u4e2d\u90a3\u4e2a\u5b57\u6bb5\u6620\u5c04\u56fe\u7247\u5730\u5740\nIMAGES_RESULT_FIELD <span class="token operator">=</span> <span class="token string">\'images\'</span>'},["code","settings.py\n\nBOT_NAME = 'beauty'\n\nSPIDER_MODULES = ['beauty.spiders']        # \u7cfb\u7edf\u81ea\u52a8\u751f\u6210\nNEWSPIDER_MODULE = 'beauty.spiders'        # \u7cfb\u7edf\u81ea\u52a8\u751f\u6210\n\n\nMONGO_URI='mongodb://localhost'            # Mongodb \u5730\u5740\nMONGO_DATABASE='beauty'                    # Mongodb \u6570\u636e\u5e93\n\n# Configure item pipelines\n# See https://doc.scrapy.org/en/latest/topics/item-pipeline.html      # \u5b9a\u4e49pipeline \u4f18\u5148\u7ea7\uff0c \u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u4f18\u5148\u6267\u884c\nITEM_PIPELINES = {\n   'beauty.pipelines.ItemPipeline': 100,\n   'beauty.pipelines.CustomImagesPipeline': 400,\n   'beauty.pipelines.BeautyPipeline': 300,\n}\n\nIMAGES_STORE = '/home/jet/mm/'                  # \b\b\u56fe\u7247\u5728\u672c\u673a\u5b58\u50a8\u7684\u6839\u76ee\u5f55\nIMAGES_URLS_FIELD = 'images'                    # \b\b\u5b9e\u4f53\u4e2d\u90a3\u4e2a\u5b57\u6bb5\u6620\u5c04\u56fe\u7247\u5730\u5740\nIMAGES_RESULT_FIELD = 'images'"]],["h2","\u6d4b\u8bd5"],["pre",{lang:null,highlighted:'mongod <span class="token operator">-</span><span class="token operator">-</span>dbpath<span class="token operator">=</span><span class="token variable">$MONGODB_HOME</span><span class="token operator">/</span>data<span class="token operator">/</span>db  # \u542f\u52a8Mongodb\nscrapy crawl mm                        # \u5f00\u59cb\u722c\u53d6'},["code","mongod --dbpath=$MONGODB_HOME/data/db  # \u542f\u52a8Mongodb\nscrapy crawl mm                        # \u5f00\u59cb\u722c\u53d6"]],["p","\u8f93\u51fa\uff1a"],["pre",{lang:null,highlighted:""},["code",""]],["p","\u4ee5\u4e0a\u4ee3\u7801\u53ef\u4ee5\u5230",["a",{title:null,href:"https://github.com/JetQin/beauty-scrapy"},"beauty scrapy"],"\u4e0b\u8f7d"]],meta:{order:1,title:"\u4f7f\u7528Scrapy\u722c\u53d6\u7f51\u7ad9\u6570\u636e",type:"\u5165\u95e8",filename:"docs/projects/scrapy-started.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#Scrapy-\u5b89\u88c5",title:"Scrapy \u5b89\u88c5"},"Scrapy \u5b89\u88c5"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u521d\u59cb\u5316\u9879\u76ee",title:"\u521d\u59cb\u5316\u9879\u76ee"},"\u521d\u59cb\u5316\u9879\u76ee"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u521b\u5efa\u722c\u866b\u6838\u5fc3\u6a21\u5757",title:"\u521b\u5efa\u722c\u866b\u6838\u5fc3\u6a21\u5757"},"\u521b\u5efa\u722c\u866b\u6838\u5fc3\u6a21\u5757"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5b9e\u73b0\u722c\u53d6\u6587\u7ae0\u903b\u8f91",title:"\u5b9e\u73b0\u722c\u53d6\u6587\u7ae0\u903b\u8f91"},"\u5b9e\u73b0\u722c\u53d6\u6587\u7ae0\u903b\u8f91"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5b9a\u4e49\u7ba1\u9053",title:"\u5b9a\u4e49\u7ba1\u9053"},"\u5b9a\u4e49\u7ba1\u9053"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u914d\u7f6e\u9879\u76ee\u4f9d\u8d56",title:"\u914d\u7f6e\u9879\u76ee\u4f9d\u8d56"},"\u914d\u7f6e\u9879\u76ee\u4f9d\u8d56"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6d4b\u8bd5",title:"\u6d4b\u8bd5"},"\u6d4b\u8bd5"]]]}}});